# -----------------------------------------------------------------------------
# wm independent hotkeys
# vim:ft=sxhkdrc
# -----------------------------------------------------------------------------

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# floating terminal emulator
super + ctrl + Return
	st -t 'st+'

# program launcher
super + d
    $HOME/bin/dmenu-apps

# quit dwm
super + shift + End
    $HOME/bin/rofi-power 'xinit'

# lock screen
super + shift + x
	/usr/local/bin/slock

# screenshot
Print
    $HOME/bin/scrot-full

super + Print
    $HOME/bin/dmenu-screenshot

super + shift + Print
    $HOME/bin/flameshot-imgck

# dmenu-record
super + shift + Pause
    $HOME/bin/dmenu-record

# pulseaudio controls speaker volume up & down
{XF86AudioRaiseVolume, XF86AudioLowerVolume}
    pamixer {-i 2, -d 2}; \
    ou_vol=$(pamixer --get-volume); \
    jack_stat=$($HOME/bin/has_headphone); \
    [ $jack_stat = "yes" ] && icon=" "; \
    [ $jack_stat = "no" ]  && icon=" "; \
    dunstify "$icon Volume: "$ou_vol -t 1000 -r 1

# pulseaudio controls mic volume up & down
shift + {XF86AudioRaiseVolume, XF86AudioLowerVolume}
    pamixer --source 1 {-i 2, -d 2}; \
    ou_mic=$(pamixer --source 1 --get-volume); \
    dunstify "  Microphone: "$ou_mic -t 1000 -r 1

# pulseaudio controls monitor volume up & down
alt + {XF86AudioRaiseVolume, XF86AudioLowerVolume}
    pamixer --source 0 {-i 2, -d 2}; \
    ou_mon=$(pamixer --source 0 --get-volume); \
    dunstify "  Monitor: "$ou_mon -t 1000 -r 1

# pulseaudio controls mute speaker
XF86AudioMute
    pamixer \
    --toggle-mute; \
    ou_mute=$(pamixer --get-mute); \
    jack_stat=$($HOME/bin/has_headphone); \
    [ $jack_stat = "yes" ] && icon_on=" " icon_off=" "; \
    [ $jack_stat = "no" ]  && icon_on=" " icon_off=" "; \
    [ $ou_mute = "true" ]  && dunstify "$icon_off MUTED" -t 1000 -r 1; \
    [ $ou_mute = "false" ] && dunstify "$icon_on UNMUTED" -t 1000 -r 1

# pulseaudio controls mute mic
shift + XF86AudioMute
    pamixer \
    --source 1 --toggle-mute; \
    in_mute=$(pamixer --source 1 --get-mute); \
    [ $in_mute = "true" ]  && dunstify "  MUTED" -t 1000 -r 1; \
    [ $in_mute = "false" ] && dunstify "  UNMUTED" -t 1000 -r 1

# pulseaudio controls mute monitor
alt + XF86AudioMute
    pamixer \
    --source 0 --toggle-mute; \
    mo_mute=$(pamixer --source 0 --get-mute); \
    [ $mo_mute = "true" ]  && dunstify "  MUTED" -t 1000 -r 1; \
    [ $mo_mute = "false" ] && dunstify "  UNMUTED" -t 1000 -r 1

# screen brightness controls
{XF86MonBrightnessUp, XF86MonBrightnessDown}
    xbacklight {-inc 5, -dec 5}; \
    get_brightness=$(xbacklight -get | cut -f 1 -d '.'); \
    dunstify "  Brightness: "$get_brightness -t 1000 -r 1

super + F5
    monitors=$(xrandr --listmonitors | grep 'Monitors:' | tr -d "Monitors: "); \
    if [ $monitors = "2" ]; \
    then feh --bg-fill -Z $WALLPAPER1 --bg-fill -Z $WALLPAPER2; \
    else feh --bg-fill -Z $WALLPAPER1; \
    fi

super + shift + F5
    monitors=$(xrandr --listmonitors | grep 'Monitors:' | tr -d "Monitors: "); \
    if [ $monitors = "2" ]; \
    then feh --bg-fill -Z $WALLPAPER2 --bg-fill -Z $WALLPAPER2; \
    else feh --bg-fill -Z $WALLPAPER2; \
    fi

# application tools on Fn Button
super + {F8, F10}
    {networkmanager_dmenu, keybind-helper}

# dmenu-udiskie
super + F6
    UDISKIE_DMENU_LAUNCHER="rofi" dmenu-udiskie -matching regex \
    -dmenu -i -no-custom -multi-select -p "UDISKIE" -lines 5 -width 300 \
    -kb-accept-alt "" -kb-custom-1 "Shift+Return"

# arandr
super + F7
    $HOME/bin/dmenu-monitor

super + ~F9
	{$HOME/bin/ffplay-launcher,pkill -f 'ffplay'}

# key-mon
super + ~F11
    {$HOME/bin/key-mon-launcher, killall key-mon}

# dmenu-systemd
super + shift + F12
	$HOME/bin/dmenu-systemd

super + ~F12
    {$HOME/bin/polybar-toggle show, $HOME/bin/polybar-toggle hide}

# clipmenu
super + {_,shift} + p
    {/usr/bin/clipmenu, /usr/bin/clipdel -d "."}

# rofi-emoji
super + e
    $HOME/bin/rofi-emoji-run

# application tab
super + grave
    $HOME/bin/rofi-application-tab

# translate-shell
super + Pause
    $HOME/bin/dmenu-trans

# dmenu-pass
super + {_,shift} + backslash
    {$HOME/bin/passtore 0, $HOME/bin/dmenu-pass}
